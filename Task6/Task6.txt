The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:

title, which is a String representing the title of the movie
studio, which is a String representing the studio that made the movie
rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)
a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, and a String representing the rating as its arguments, and sets the respective class properties to these values.

class Movie{
    constructor(title,studio,rating){
        this.title=title;
        this.studio=studio;
        this.rating=rating;
    }

b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.

class Movie{
    constructor(title,studio,rating){
        this.title=title;
        this.studio=studio;
        this.rating="PG";
    }

c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the input array with a rating of "PG". You may assume the input array is full of Movie instances. The returned array need not be full.

getPG(Movie[] mov) {
 Movie[] pgMov = new Movie[mov.length];
 int newArrayIndex = 0;
 for (int i = 0; i < mov.length; i++) {
 if (mov[i].rating.equals(“PG”)) {
 pgMov[newArrayIndex] = mov[i];
 newArrayIndex++;
 }
 }
 return pgMov;
}
d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG­13”

var m=new Movie("Casino Royale", "Eon Productions","PG13");

console.log(m);


2) Class circle
-radius:double=1.0;
-color:String="red";

class Circle{
    constructor(radius,color)
    {
        this.radius=radius;
        this.color=color;
    }
    getArea()
    {
        var a=Math.PI*this.radius*this.radius;
        return a.toFixed(2);
    }
    getCircumference()
    {
        var b=2*Math.PI*this.radius;
        return b.toFixed(2);
    }
    getRadius()
    {
        var c=2*Math.PI*this.radius/2*Math.PI;
        return c.toFixed(2);
    }
    getColor()
    {
        return this.color;
    }
}
var obj=new Circle(1.0,"red");
console.log(obj);
console.log(obj.getArea());
console.log(obj.getCircumference());
console.log(obj.getRadius());
console.log(obj.getColor());

3) Write a person class to hold all the details.

class Person{
    constructor(name,age,degree,state,height,weight)
    {
        this.name=name;
        this.age=age;
        this.degree=degree;
        this.state=state;
        this.height=height;
        this.weight=weight;
    }
}

var obj= new Person("Ragu",25,"BCA","Tamilnadu",170,67);
console.log(obj);

4) Write a class to calculate the uber price.

class Uber{
    constructor(from,to,kms)
    {
        this.from=from;
        this.to=to;
        this.kms=kms;
    }
    uber(){
        if(this.kms<=4)
        {
            return 30;
        }
        if(this.kms>4)
        {
            var price=10;
            return this.kms*price;
        }
    }
}
var obj = new Uber("Chennai","Bangalore",150);
console.log(obj);
console.log (`The uber fare for ${obj.from} to ${obj.to} is : `);
console.log (obj.uber());






